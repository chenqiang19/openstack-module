<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.cloud.resource.mapper.OpenstackImagesMapper">
  <resultMap id="BaseResultMap" type="com.ict.cloud.resource.domain.OpenstackImages">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="os_admin_user" jdbcType="VARCHAR" property="osAdminUser" />
    <result column="image_id" jdbcType="VARCHAR" property="imageId" />
    <result column="image_name" jdbcType="VARCHAR" property="imageName" />
    <result column="image_status" jdbcType="VARCHAR" property="imageStatus" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="image_version" jdbcType="VARCHAR" property="imageVersion" />
    <result column="image_arch" jdbcType="VARCHAR" property="imageArch" />
    <result column="image_type" jdbcType="VARCHAR" property="imageType" />
    <result column="disk_format" jdbcType="VARCHAR" property="diskFormat" />
    <result column="visibility" jdbcType="VARCHAR" property="imageVisibility" />
    <result column="image_size" jdbcType="VARCHAR" property="imageSize" />
    <result column="protected" jdbcType="BIT" property="protectedFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, os_admin_user, image_id, image_name, image_status, create_at, updated_at,
    image_version, image_arch, image_type, disk_format, visibility, image_size, protected
  </sql>
  <select id="selectByExample" parameterType="com.ict.cloud.resource.domain.OpenstackImagesCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from openstack_images
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from openstack_images
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from openstack_images
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ict.cloud.resource.domain.OpenstackImagesCriteria">
    delete from openstack_images
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="com.ict.cloud.resource.domain.OpenstackImages">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into openstack_images (os_admin_user, image_id, image_name,
      image_status, create_at, updated_at, image_version, image_arch, image_type,
      disk_format, visibility, image_size, protected)
    values (#{osAdminUser,jdbcType=VARCHAR}, #{imageId,jdbcType=VARCHAR}, #{imageName,jdbcType=VARCHAR},
      #{imageStatus,jdbcType=VARCHAR},  #{createAt,jdbcType=TIMESTAMP},
      #{updatedAt,jdbcType=TIMESTAMP}, #{imageVersion,jdbcType=VARCHAR},#{imageArch,jdbcType=VARCHAR},
      #{imageType,jdbcType=VARCHAR}, #{diskFormat,jdbcType=VARCHAR}, #{imageVisibility,jdbcType=VARCHAR},
      #{imageSize,jdbcType=VARCHAR}, #{protectedFlag,jdbcType=BIT})
    ON DUPLICATE KEY UPDATE
      image_status=#{imageStatus},updated_at=#{updatedAt},image_id=#{imageId},image_version=#{imageVersion},
      image_arch=#{imageArch},image_type=#{imageType},disk_format=#{diskFormat},visibility=#{imageVisibility},
      image_size=#{imageSize},protected=#{protectedFlag},os_admin_user=#{osAdminUser}
  </insert>
  <insert id="insertSelective" parameterType="com.ict.cloud.resource.domain.OpenstackImages">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into openstack_images
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="os_admin_user != null">
        os_admin_user,
      </if>
      <if test="imageId != null">
        image_id,
      </if>
      <if test="imageName != null">
        image_name,
      </if>
      <if test="imageStatus != null">
        image_status,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="imageVersion != null">
        image_version,
      </if>
      <if test="imageArch != null">
        image_arch,
      </if>
      <if test="imageType != null">
        image_type,
      </if>
      <if test="diskFormat != null">
        disk_format,
      </if>
      <if test="imageVisibility != null">
        visibility,
      </if>
      <if test="imageSize != null">
        image_size,
      </if>
      <if test="protectedFlag != null">
        protected,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="osAdminUser != null">
        #{os_admin_user,jdbcType=VARCHAR},
      </if>
      <if test="imageId != null">
        #{imageId,jdbcType=VARCHAR},
      </if>
      <if test="imageName != null">
        #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="imageStatus != null">
        #{imageStatus,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="imageVersion != null">
        #{imageVersion,jdbcType=VARCHAR},
      </if>
      <if test="imageArch != null">
        #{imageArch,jdbcType=VARCHAR},
      </if>
      <if test="imageType != null">
        #{imageType,jdbcType=VARCHAR},
      </if>
      <if test="diskFormat != null">
        #{diskFormat,jdbcType=VARCHAR},
      </if>
      <if test="imageVisibility != null">
        #{imageVisibility,jdbcType=VARCHAR},
      </if>
      <if test="imageSize != null">
        #{imageSize,jdbcType=VARCHAR},
      </if>
      <if test="protectedFlag != null">
        #{protectedFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ict.cloud.resource.domain.OpenstackImagesCriteria" resultType="java.lang.Long">
    select count(*) from openstack_images
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update openstack_images
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.osAdminUser != null">
        os_admin_user = #{record.osAdminUser,jdbcType=VARCHAR},
      </if>
      <if test="record.imageId != null">
        image_id = #{record.imageId,jdbcType=VARCHAR},
      </if>
      <if test="record.imageName != null">
        image_name = #{record.imageName,jdbcType=VARCHAR},
      </if>
      <if test="record.imageStatus != null">
        image_status = #{record.imageStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.imageVersion != null">
        image_version = #{record.imageVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.imageArch != null">
        image_arch = #{record.imageArch,jdbcType=VARCHAR},
      </if>
      <if test="record.imageType != null">
        image_type = #{record.imageType,jdbcType=VARCHAR},
      </if>
      <if test="record.diskFormat != null">
        disk_format = #{record.diskFormat,jdbcType=VARCHAR},
      </if>
      <if test="record.imageVisibility != null">
        visibility = #{record.imageVisibility,jdbcType=VARCHAR},
      </if>
      <if test="record.imageSize != null">
        image_size = #{record.imageSize,jdbcType=VARCHAR},
      </if>
      <if test="record.protectedFlag != null">
        protected = #{record.protectedFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update openstack_images
    set id = #{record.id,jdbcType=INTEGER},
      os_admin_user = #{record.osAdminUser,jdbcType=VARCHAR},
      image_id = #{record.imageId,jdbcType=VARCHAR},
      image_name = #{record.imageName,jdbcType=VARCHAR},
      image_status = #{record.imageStatus,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      image_version = #{record.imageVersion,jdbcType=VARCHAR},
      image_arch = #{record.imageArch,jdbcType=VARCHAR},
      image_type = #{record.imageType,jdbcType=VARCHAR},
      disk_format = #{record.diskFormat,jdbcType=VARCHAR},
      visibility = #{record.imageVisibility,jdbcType=VARCHAR},
      image_size = #{record.imageSize,jdbcType=VARCHAR},
      protected = #{record.protectedFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ict.cloud.resource.domain.OpenstackImages">
    update openstack_images
    <set>
      <if test="osAdminUser != null">
        os_admin_user = #{osAdminUser,jdbcType=VARCHAR},
      </if>
      <if test="imageId != null">
        image_id = #{imageId,jdbcType=VARCHAR},
      </if>
      <if test="imageName != null">
        image_name = #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="imageStatus != null">
        image_status = #{imageStatus,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="imageVersion != null">
        image_version = #{imageVersion,jdbcType=VARCHAR},
      </if>
      <if test="imageArch != null">
        image_arch = #{imageArch,jdbcType=VARCHAR},
      </if>
      <if test="imageType != null">
        image_type = #{imageType,jdbcType=VARCHAR},
      </if>
      <if test="diskFormat != null">
        disk_format = #{diskFormat,jdbcType=VARCHAR},
      </if>
      <if test="imageVisibility != null">
        visibility = #{imageVisibility,jdbcType=VARCHAR},
      </if>
      <if test="imageSize != null">
        image_size = #{imageSize,jdbcType=VARCHAR},
      </if>
      <if test="protectedFlag != null">
        protected = #{protectedFlag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ict.cloud.resource.domain.OpenstackImages">
    update openstack_images
    set os_admin_user = #{osAdminUser,jdbcType=VARCHAR},
      image_id = #{imageId,jdbcType=VARCHAR},
      image_name = #{imageName,jdbcType=VARCHAR},
      image_status = #{imageStatus,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      image_version = #{imageVersion,jdbcType=VARCHAR},
      image_arch = #{imageArch,jdbcType=VARCHAR},
      image_type = #{imageType,jdbcType=VARCHAR},
      disk_format = #{diskFormat,jdbcType=VARCHAR},
      visibility = #{imageVisibility,jdbcType=VARCHAR},
      image_size = #{imageSize,jdbcType=VARCHAR},
      protected = #{protectedFlag,jdbcType=BIT},
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.ict.cloud.resource.domain.OpenstackImagesCriteria" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from openstack_images
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectImageNames" resultType="list">
    select image_name from openstack_images
  </select>
  <select id="selectAllImages" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM openstack_images
  </select>
</mapper>