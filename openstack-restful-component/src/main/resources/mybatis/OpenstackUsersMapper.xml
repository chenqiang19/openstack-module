<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.cloud.resource.mapper.OpenstackUsersMapper">
  <resultMap id="BaseResultMap" type="com.ict.cloud.resource.domain.OpenstackUsers">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="domain_id" jdbcType="VARCHAR" property="domainId" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="default_project_id" jdbcType="VARCHAR" property="defaultProjectId" />
    <result column="password_expires_at" jdbcType="TIMESTAMP" property="passwordExpiresAt" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, domain_id, enabled, user_name, password, default_project_id, password_expires_at, 
    tenant_id
  </sql>
  <select id="selectByExample" parameterType="com.ict.cloud.resource.domain.OpenstackUsersCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from openstack_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from openstack_users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from openstack_users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ict.cloud.resource.domain.OpenstackUsersCriteria">
    delete from openstack_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ict.cloud.resource.domain.OpenstackUsers">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into openstack_users (user_id, domain_id, enabled, 
      user_name, password, default_project_id, 
      password_expires_at, tenant_id)
    values (#{userId,jdbcType=VARCHAR}, #{domainId,jdbcType=VARCHAR}, #{enabled,jdbcType=BIT}, 
      #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{defaultProjectId,jdbcType=VARCHAR}, 
      #{passwordExpiresAt,jdbcType=TIMESTAMP}, #{tenantId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ict.cloud.resource.domain.OpenstackUsers">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into openstack_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="domainId != null">
        domain_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="defaultProjectId != null">
        default_project_id,
      </if>
      <if test="passwordExpiresAt != null">
        password_expires_at,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="domainId != null">
        #{domainId,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="defaultProjectId != null">
        #{defaultProjectId,jdbcType=VARCHAR},
      </if>
      <if test="passwordExpiresAt != null">
        #{passwordExpiresAt,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantId != null">
        #{tenant_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ict.cloud.resource.domain.OpenstackUsersCriteria" resultType="java.lang.Long">
    select count(*) from openstack_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update openstack_users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.domainId != null">
        domain_id = #{record.domainId,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultProjectId != null">
        default_project_id = #{record.defaultProjectId,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordExpiresAt != null">
        password_expires_at = #{record.passwordExpiresAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update openstack_users
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      domain_id = #{record.domainId,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=BIT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      default_project_id = #{record.defaultProjectId,jdbcType=VARCHAR},
      password_expires_at = #{record.passwordExpiresAt,jdbcType=TIMESTAMP},
      tenant_id = #{record.tenantId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ict.cloud.resource.domain.OpenstackUsers">
    update openstack_users
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="domainId != null">
        domain_id = #{domainId,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="defaultProjectId != null">
        default_project_id = #{defaultProjectId,jdbcType=VARCHAR},
      </if>
      <if test="passwordExpiresAt != null">
        password_expires_at = #{passwordExpiresAt,jdbcType=TIMESTAMP},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ict.cloud.resource.domain.OpenstackUsers">
    update openstack_users
    set user_id = #{userId,jdbcType=VARCHAR},
      domain_id = #{domainId,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=BIT},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      default_project_id = #{defaultProjectId,jdbcType=VARCHAR},
      password_expires_at = #{passwordExpiresAt,jdbcType=TIMESTAMP},
      tenant_id = #{tenantId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.ict.cloud.resource.domain.OpenstackUsersCriteria" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from openstack_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
</mapper>