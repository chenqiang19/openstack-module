<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.cloud.resource.mapper.OpenstackSecurityGroupMapper">
  <resultMap id="BaseResultMap" type="com.ict.cloud.resource.domain.OpenstackSecurityGroup">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="template_name" jdbcType="VARCHAR" property="templateName" />
    <result column="security_group_id" jdbcType="VARCHAR" property="securityGroupId" />
    <result column="security_group_name" jdbcType="VARCHAR" property="securityGroupName" />
    <result column="security_group_tenant_id" jdbcType="VARCHAR" property="securityGroupTenantId" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, template_name, security_group_id, security_group_name, security_group_tenant_id,
    tenant_id
  </sql>
  <select id="selectByExample" parameterType="com.ict.cloud.resource.domain.OpenstackSecurityGroupCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from openstack_security_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from openstack_security_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from openstack_security_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ict.cloud.resource.domain.OpenstackSecurityGroupCriteria">
    delete from openstack_security_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ict.cloud.resource.domain.OpenstackSecurityGroup">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into openstack_security_group (template_name, security_group_id, security_group_name,
      security_group_tenant_id, tenant_id)
    values (#{templateName,jdbcType=VARCHAR}, #{securityGroupId,jdbcType=VARCHAR}, #{securityGroupName,jdbcType=VARCHAR},
      #{securityGroupTenantId,jdbcType=VARCHAR}, #{tenantId,jdbcType=INTEGER})
    ON DUPLICATE KEY UPDATE
    security_group_name=#{securityGroupName},security_group_tenant_id=#{securityGroupTenantId}
  </insert>
  <insert id="insertSelective" parameterType="com.ict.cloud.resource.domain.OpenstackSecurityGroup">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into openstack_security_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="templateName != null">
        template_name,
      </if>
      <if test="securityGroupId != null">
        security_group_id,
      </if>
      <if test="securityGroupName != null">
        security_group_name,
      </if>
      <if test="securityGroupTenantId != null">
        security_group_tenant_id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="templateName != null">
        #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="securityGroupId != null">
        #{securityGroupId,jdbcType=VARCHAR},
      </if>
      <if test="securityGroupName != null">
        #{securityGroupName,jdbcType=VARCHAR},
      </if>
      <if test="securityGroupTenantId != null">
        #{securityGroupTenantId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ict.cloud.resource.domain.OpenstackSecurityGroupCriteria" resultType="java.lang.Long">
    select count(*) from openstack_security_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update openstack_security_group
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.templateName != null">
        template_name = #{record.templateName,jdbcType=VARCHAR},
      </if>
      <if test="record.securityGroupId != null">
        security_group_id = #{record.securityGroupId,jdbcType=VARCHAR},
      </if>
      <if test="record.securityGroupName != null">
        security_group_name = #{record.securityGroupName,jdbcType=VARCHAR},
      </if>
      <if test="record.securityGroupTenantId != null">
        security_group_tenant_id = #{record.securityGroupTenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update openstack_security_group
    set id = #{record.id,jdbcType=INTEGER},
      template_name = #{record.templateName,jdbcType=VARCHAR},
      security_group_id = #{record.securityGroupId,jdbcType=VARCHAR},
      security_group_name = #{record.securityGroupName,jdbcType=VARCHAR},
      security_group_tenant_id = #{record.securityGroupTenantId,jdbcType=VARCHAR},
      tenant_id = #{record.tenantId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ict.cloud.resource.domain.OpenstackSecurityGroup">
    update openstack_security_group
    <set>
      <if test="templateName != null">
        template_name = #{templateName,jdbcType=VARCHAR},
      </if>
      <if test="securityGroupId != null">
        security_group_id = #{securityGroupId,jdbcType=VARCHAR},
      </if>
      <if test="securityGroupName != null">
        security_group_name = #{securityGroupName,jdbcType=VARCHAR},
      </if>
      <if test="securityGroupTenantId != null">
        security_group_tenant_id = #{securityGroupTenantId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ict.cloud.resource.domain.OpenstackSecurityGroup">
    update openstack_security_group
    set template_name = #{templateName,jdbcType=VARCHAR},
      security_group_id = #{securityGroupId,jdbcType=VARCHAR},
      security_group_name = #{securityGroupName,jdbcType=VARCHAR},
      security_group_tenant_id = #{securityGroupTenantId,jdbcType=VARCHAR},
      tenant_id = #{tenantId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.ict.cloud.resource.domain.OpenstackSecurityGroupCriteria" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from openstack_security_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectSecurityGroupIds" resultType="java.lang.String">
    select security_group_id from openstack_security_group
  </select>
</mapper>