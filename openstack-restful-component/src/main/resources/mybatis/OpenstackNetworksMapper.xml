<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.cloud.resource.mapper.OpenstackNetworksMapper">
  <resultMap id="BaseResultMap" type="com.ict.cloud.resource.domain.OpenstackNetworks">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="network_id" jdbcType="VARCHAR" property="networkId" />
    <result column="admin_state_up" jdbcType="BIT" property="adminStateUp" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="dsn_domain" jdbcType="VARCHAR" property="dsnDomain" />
    <result column="network_name" jdbcType="VARCHAR" property="networkName" />
    <result column="network_type" jdbcType="VARCHAR" property="networkType" />
    <result column="shared" jdbcType="BIT" property="shared" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="is_default" jdbcType="BIT" property="isDefault" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="segmentation_id" jdbcType="INTEGER" property="segmentationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, network_id, admin_state_up, create_at, updated_at, dsn_domain, network_name,
    network_type, shared, status, is_default, tenant_id, segmentation_id
  </sql>
  <select id="selectByExample" parameterType="com.ict.cloud.resource.domain.OpenstackNetworksCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from openstack_networks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from openstack_networks
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from openstack_networks
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ict.cloud.resource.domain.OpenstackNetworksCriteria">
    delete from openstack_networks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ict.cloud.resource.domain.OpenstackNetworks">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into openstack_networks (project_id, network_id, admin_state_up,
    create_at, updated_at, dsn_domain,
    network_name, network_type, shared,
    status, is_default, tenant_id,
    segmentation_id)
    values (#{projectId,jdbcType=VARCHAR}, #{networkId,jdbcType=VARCHAR}, #{adminStateUp,jdbcType=BIT},
    #{createAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{dsnDomain,jdbcType=VARCHAR},
    #{networkName,jdbcType=VARCHAR}, #{networkType,jdbcType=VARCHAR}, #{shared,jdbcType=BIT},
    #{status,jdbcType=VARCHAR}, #{isDefault,jdbcType=BIT}, #{tenantId,jdbcType=INTEGER},
    #{segmentationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ict.cloud.resource.domain.OpenstackNetworks">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into openstack_networks
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="networkId != null">
        network_id,
      </if>
      <if test="adminStateUp != null">
        admin_state_up,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="dsnDomain != null">
        dsn_domain,
      </if>
      <if test="networkName != null">
        network_name,
      </if>
      <if test="networkType != null">
        network_type,
      </if>
      <if test="shared != null">
        shared,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="segmentationId != null">
        segmentation_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="networkId != null">
        #{networkId,jdbcType=VARCHAR},
      </if>
      <if test="adminStateUp != null">
        #{adminStateUp,jdbcType=BIT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dsnDomain != null">
        #{dsnDomain,jdbcType=VARCHAR},
      </if>
      <if test="networkName != null">
        #{networkName,jdbcType=VARCHAR},
      </if>
      <if test="networkType != null">
        #{networkType,jdbcType=VARCHAR},
      </if>
      <if test="shared != null">
        #{shared,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=BIT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="segmentationId != null">
        #{segmentationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ict.cloud.resource.domain.OpenstackNetworksCriteria" resultType="java.lang.Long">
    select count(*) from openstack_networks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update openstack_networks
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.networkId != null">
        network_id = #{record.networkId,jdbcType=VARCHAR},
      </if>
      <if test="record.adminStateUp != null">
        admin_state_up = #{record.adminStateUp,jdbcType=BIT},
      </if>
      <if test="record.createAt != null">
        create_at = #{record.createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dsnDomain != null">
        dsn_domain = #{record.dsnDomain,jdbcType=VARCHAR},
      </if>
      <if test="record.networkName != null">
        network_name = #{record.networkName,jdbcType=VARCHAR},
      </if>
      <if test="record.networkType != null">
        network_type = #{record.networkType,jdbcType=VARCHAR},
      </if>
      <if test="record.shared != null">
        shared = #{record.shared,jdbcType=BIT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null">
        is_default = #{record.isDefault,jdbcType=BIT},
      </if>
      <if test="record.tenantId != null">
        tenant_id = #{record.tenantId,jdbcType=INTEGER},
      </if>
      <if test="record.segmentationId != null">
        segmentation_id = #{record.segmentationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update openstack_networks
    set id = #{record.id,jdbcType=INTEGER},
    project_id = #{record.projectId,jdbcType=VARCHAR},
    network_id = #{record.networkId,jdbcType=VARCHAR},
    admin_state_up = #{record.adminStateUp,jdbcType=BIT},
    create_at = #{record.createAt,jdbcType=TIMESTAMP},
    updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
    dsn_domain = #{record.dsnDomain,jdbcType=VARCHAR},
    network_name = #{record.networkName,jdbcType=VARCHAR},
    network_type = #{record.networkType,jdbcType=VARCHAR},
    shared = #{record.shared,jdbcType=BIT},
    status = #{record.status,jdbcType=VARCHAR},
    is_default = #{record.isDefault,jdbcType=BIT},
    tenant_id = #{record.tenantId,jdbcType=INTEGER},
    segmentation_id = #{record.segmentationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ict.cloud.resource.domain.OpenstackNetworks">
    update openstack_networks
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="networkId != null">
        network_id = #{networkId,jdbcType=VARCHAR},
      </if>
      <if test="adminStateUp != null">
        admin_state_up = #{adminStateUp,jdbcType=BIT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="dsnDomain != null">
        dsn_domain = #{dsnDomain,jdbcType=VARCHAR},
      </if>
      <if test="networkName != null">
        network_name = #{networkName,jdbcType=VARCHAR},
      </if>
      <if test="networkType != null">
        network_type = #{networkType,jdbcType=VARCHAR},
      </if>
      <if test="shared != null">
        shared = #{shared,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=BIT},
      </if>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="segmentationId != null">
        segmentation_id = #{segmentationId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ict.cloud.resource.domain.OpenstackNetworks">
    update openstack_networks
    set project_id = #{projectId,jdbcType=VARCHAR},
        network_id = #{networkId,jdbcType=VARCHAR},
        admin_state_up = #{adminStateUp,jdbcType=BIT},
        create_at = #{createAt,jdbcType=TIMESTAMP},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
        dsn_domain = #{dsnDomain,jdbcType=VARCHAR},
        network_name = #{networkName,jdbcType=VARCHAR},
        network_type = #{networkType,jdbcType=VARCHAR},
        shared = #{shared,jdbcType=BIT},
        status = #{status,jdbcType=VARCHAR},
        is_default = #{isDefault,jdbcType=BIT},
        tenant_id = #{tenantId,jdbcType=INTEGER},
        segmentation_id = #{segmentationId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.ict.cloud.resource.domain.OpenstackNetworksCriteria" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from openstack_networks
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectAllNetwork" resultMap="BaseResultMap">
    select * from openstack_networks
  </select>
</mapper>